/*
 * This file is generated by jOOQ.
 */
package com.getartur.billingcore.shared.domain.jooq.tables.records;


import com.getartur.billingcore.shared.domain.jooq.tables.Address;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressRecord extends UpdatableRecordImpl<AddressRecord> implements Record8<Long, Long, String, String, String, String, String, String> {

    private static final long serialVersionUID = 537674807;

    /**
     * Setter for <code>getartur.address.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>getartur.address.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>getartur.address.customer_id</code>.
     */
    public void setCustomerId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>getartur.address.customer_id</code>.
     */
    public Long getCustomerId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>getartur.address.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>getartur.address.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>getartur.address.line_1</code>.
     */
    public void setLine_1(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>getartur.address.line_1</code>.
     */
    public String getLine_1() {
        return (String) get(3);
    }

    /**
     * Setter for <code>getartur.address.line_2</code>.
     */
    public void setLine_2(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>getartur.address.line_2</code>.
     */
    public String getLine_2() {
        return (String) get(4);
    }

    /**
     * Setter for <code>getartur.address.zip</code>.
     */
    public void setZip(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>getartur.address.zip</code>.
     */
    public String getZip() {
        return (String) get(5);
    }

    /**
     * Setter for <code>getartur.address.city</code>.
     */
    public void setCity(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>getartur.address.city</code>.
     */
    public String getCity() {
        return (String) get(6);
    }

    /**
     * Setter for <code>getartur.address.country</code>.
     */
    public void setCountry(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>getartur.address.country</code>.
     */
    public String getCountry() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, String, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, String, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Address.ADDRESS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Address.ADDRESS.CUSTOMER_ID;
    }

    @Override
    public Field<String> field3() {
        return Address.ADDRESS.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return Address.ADDRESS.LINE_1;
    }

    @Override
    public Field<String> field5() {
        return Address.ADDRESS.LINE_2;
    }

    @Override
    public Field<String> field6() {
        return Address.ADDRESS.ZIP;
    }

    @Override
    public Field<String> field7() {
        return Address.ADDRESS.CITY;
    }

    @Override
    public Field<String> field8() {
        return Address.ADDRESS.COUNTRY;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getCustomerId();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getLine_1();
    }

    @Override
    public String component5() {
        return getLine_2();
    }

    @Override
    public String component6() {
        return getZip();
    }

    @Override
    public String component7() {
        return getCity();
    }

    @Override
    public String component8() {
        return getCountry();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getCustomerId();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getLine_1();
    }

    @Override
    public String value5() {
        return getLine_2();
    }

    @Override
    public String value6() {
        return getZip();
    }

    @Override
    public String value7() {
        return getCity();
    }

    @Override
    public String value8() {
        return getCountry();
    }

    @Override
    public AddressRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AddressRecord value2(Long value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public AddressRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public AddressRecord value4(String value) {
        setLine_1(value);
        return this;
    }

    @Override
    public AddressRecord value5(String value) {
        setLine_2(value);
        return this;
    }

    @Override
    public AddressRecord value6(String value) {
        setZip(value);
        return this;
    }

    @Override
    public AddressRecord value7(String value) {
        setCity(value);
        return this;
    }

    @Override
    public AddressRecord value8(String value) {
        setCountry(value);
        return this;
    }

    @Override
    public AddressRecord values(Long value1, Long value2, String value3, String value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressRecord
     */
    public AddressRecord() {
        super(Address.ADDRESS);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(Long id, Long customerId, String description, String line_1, String line_2, String zip, String city, String country) {
        super(Address.ADDRESS);

        set(0, id);
        set(1, customerId);
        set(2, description);
        set(3, line_1);
        set(4, line_2);
        set(5, zip);
        set(6, city);
        set(7, country);
    }
}
