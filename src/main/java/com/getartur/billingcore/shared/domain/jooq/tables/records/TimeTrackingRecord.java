/*
 * This file is generated by jOOQ.
 */
package com.getartur.billingcore.shared.domain.jooq.tables.records;


import com.getartur.billingcore.shared.domain.jooq.tables.TimeTracking;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeTrackingRecord extends UpdatableRecordImpl<TimeTrackingRecord> implements Record8<Long, Long, String, LocalDateTime, LocalDateTime, Integer, Boolean, LocalDateTime> {

    private static final long serialVersionUID = 1861990846;

    /**
     * Setter for <code>getartur.time_tracking.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>getartur.time_tracking.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>getartur.time_tracking.project_id</code>.
     */
    public void setProjectId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>getartur.time_tracking.project_id</code>.
     */
    public Long getProjectId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>getartur.time_tracking.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>getartur.time_tracking.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>getartur.time_tracking.start</code>.
     */
    public void setStart(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>getartur.time_tracking.start</code>.
     */
    public LocalDateTime getStart() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>getartur.time_tracking.end</code>.
     */
    public void setEnd(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>getartur.time_tracking.end</code>.
     */
    public LocalDateTime getEnd() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>getartur.time_tracking.duration_in_minutes</code>.
     */
    public void setDurationInMinutes(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>getartur.time_tracking.duration_in_minutes</code>.
     */
    public Integer getDurationInMinutes() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>getartur.time_tracking.billed</code>.
     */
    public void setBilled(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>getartur.time_tracking.billed</code>.
     */
    public Boolean getBilled() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>getartur.time_tracking.created</code>.
     */
    public void setCreated(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>getartur.time_tracking.created</code>.
     */
    public LocalDateTime getCreated() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, String, LocalDateTime, LocalDateTime, Integer, Boolean, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, String, LocalDateTime, LocalDateTime, Integer, Boolean, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TimeTracking.TIME_TRACKING.ID;
    }

    @Override
    public Field<Long> field2() {
        return TimeTracking.TIME_TRACKING.PROJECT_ID;
    }

    @Override
    public Field<String> field3() {
        return TimeTracking.TIME_TRACKING.DESCRIPTION;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TimeTracking.TIME_TRACKING.START;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TimeTracking.TIME_TRACKING.END;
    }

    @Override
    public Field<Integer> field6() {
        return TimeTracking.TIME_TRACKING.DURATION_IN_MINUTES;
    }

    @Override
    public Field<Boolean> field7() {
        return TimeTracking.TIME_TRACKING.BILLED;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return TimeTracking.TIME_TRACKING.CREATED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getProjectId();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public LocalDateTime component4() {
        return getStart();
    }

    @Override
    public LocalDateTime component5() {
        return getEnd();
    }

    @Override
    public Integer component6() {
        return getDurationInMinutes();
    }

    @Override
    public Boolean component7() {
        return getBilled();
    }

    @Override
    public LocalDateTime component8() {
        return getCreated();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getProjectId();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public LocalDateTime value4() {
        return getStart();
    }

    @Override
    public LocalDateTime value5() {
        return getEnd();
    }

    @Override
    public Integer value6() {
        return getDurationInMinutes();
    }

    @Override
    public Boolean value7() {
        return getBilled();
    }

    @Override
    public LocalDateTime value8() {
        return getCreated();
    }

    @Override
    public TimeTrackingRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TimeTrackingRecord value2(Long value) {
        setProjectId(value);
        return this;
    }

    @Override
    public TimeTrackingRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TimeTrackingRecord value4(LocalDateTime value) {
        setStart(value);
        return this;
    }

    @Override
    public TimeTrackingRecord value5(LocalDateTime value) {
        setEnd(value);
        return this;
    }

    @Override
    public TimeTrackingRecord value6(Integer value) {
        setDurationInMinutes(value);
        return this;
    }

    @Override
    public TimeTrackingRecord value7(Boolean value) {
        setBilled(value);
        return this;
    }

    @Override
    public TimeTrackingRecord value8(LocalDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public TimeTrackingRecord values(Long value1, Long value2, String value3, LocalDateTime value4, LocalDateTime value5, Integer value6, Boolean value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TimeTrackingRecord
     */
    public TimeTrackingRecord() {
        super(TimeTracking.TIME_TRACKING);
    }

    /**
     * Create a detached, initialised TimeTrackingRecord
     */
    public TimeTrackingRecord(Long id, Long projectId, String description, LocalDateTime start, LocalDateTime end, Integer durationInMinutes, Boolean billed, LocalDateTime created) {
        super(TimeTracking.TIME_TRACKING);

        set(0, id);
        set(1, projectId);
        set(2, description);
        set(3, start);
        set(4, end);
        set(5, durationInMinutes);
        set(6, billed);
        set(7, created);
    }
}
